apply plugin: 'java'
apply plugin: 'eclipse'
sourceSets {
  main {
     java.srcDirs = ['src']
     output.classesDir = 'out/classes'
      resources {
       srcDirs = ['src']
     }
   }
}

clean.doFirst{
    delete "${projectDir}/lib"
    delete "${projectDir}/out"
    delete "${projectDir}/../EchoServerApplication/EchoServerPkg/Code/lib"
    delete "${projectDir}/../EchoServerApplication/EchoServerPkg/Code/echoserver.jar"
}

repositories {
        mavenCentral()
}
    
configurations {
    azuresf
}

dependencies {
    azuresf ('com.microsoft.azure.servicefabric:actors-preview:1.0.0') 
    compile fileTree(dir: 'lib', include: '*.jar')
}

task explodeDeps(type: Copy, dependsOn:configurations.azuresf) { task ->
    configurations.azuresf.filter { it.toString().contains("native-preview") }.each{
        from zipTree(it)
    }
    configurations.azuresf.filter { !it.toString().contains("native-preview") }.each {
        from it
    }
    into "lib"
    include "libj*.so", "*.jar"
}

compileJava.dependsOn(explodeDeps)

jar {
    manifest {
      def mpath = configurations.azuresf.collect {'lib/'+it.getName()}.join (' ')
    attributes(
        'Main-Class': 'watchdog.WatchDogServiceHost',
        "Class-Path": mpath)
    baseName "watchdog"
    destinationDir = file('./../WatchdogApplication/WatchdogPkg/Code/')
    }
}

task copyDeps<< {
    copy {
        from("lib/")
        into("./../WatchdogApplication/WatchdogPkg/Code/lib")
        include('*')
    }
}

defaultTasks 'clean', 'jar', 'copyDeps'
