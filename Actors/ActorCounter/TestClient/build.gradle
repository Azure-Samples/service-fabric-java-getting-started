apply plugin: 'java'
apply plugin: 'eclipse'

sourceSets {
  main {
	java.srcDirs = ['src']
    output.classesDir = 'out/classes'
    resources {
		srcDirs = ['src']
    }
   }
}

clean.doFirst {
	delete "${projectDir}/out"
    delete "${projectDir}/lib"
}

repositories {
        mavenCentral()
}

configurations {
    azuresf
}

dependencies {
    compile project(':Interface')
    azuresf ('com.microsoft.servicefabric:sf-actors:1.0.0-preview2') 
    compile fileTree(dir: 'lib', include: '*.jar')
}

task explodeDeps(type: Copy, dependsOn:configurations.azuresf) { task ->
    configurations.azuresf.filter { it.toString().contains("native") }.each{
        from zipTree(it)
    }
    configurations.azuresf.filter { !it.toString().contains("native") }.each {
        from it
    }
    into "lib"
    include "libj*.so", "*.jar"
}

compileJava.dependsOn(explodeDeps)

jar 
{
	manifest {
        def mpath = configurations.compile.collect {'lib/'+it.getName()}.join (' ')
        mpath = mpath + ' ' + configurations.azuresf.collect {'lib/'+it.getName()}.join (' ')
    attributes(
		'Main-Class': 'counterclient.CounterClient',
		"Class-Path": mpath)
	}
	baseName "ActorCounterTest"
    destinationDir = file('out/lib')
}

task copyDeps<< {
        copy {
                from("lib/")
                into("./out/lib/lib")
                include('*')
        }
        copy {
                from("../CounterInterface/out/lib")
                into("./out/lib/lib")
                include('*.jar')
        }
}

defaultTasks 'clean', 'jar', 'copyDeps'




